{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useLayoutEffect } from \"react\"; // export const useTheme = () => {\n//     const [theme, setTheme] = useState('light');\n//     useLayoutEffect(() => {\n//         document.documentElement.setAttribute('data-theme', theme)\n//     }, [theme])\n//     return { theme, setTheme };\n// };\n// const isDarkTheme = window?.matchMedia('(prefers-color-scheme: dark)').matches\n// const defaultTheme = isDarkTheme ? 'dark' : 'light'\n\nexport const useTheme = () => {\n  _s();\n\n  const [theme, setTheme] = useState(localStorage.getItem('app-theme'));\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('app-theme', theme);\n  }, [theme]);\n  return {\n    theme,\n    setTheme\n  };\n};\n\n_s(useTheme, \"qGG7CQ2ar1O+0pQ9BuVYc2V2P8g=\");","map":{"version":3,"sources":["/Users/antonlyzun/Desktop/GoIT/goit-react-hw-07-phonebook/src/shared/hooks/useTheme.js"],"names":["useState","useLayoutEffect","useTheme","theme","setTheme","localStorage","getItem","document","documentElement","setAttribute","setItem"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,QAA0C,OAA1C,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAChCK,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgC,CAAlC;AAIAL,EAAAA,eAAe,CAAC,MAAM;AACpBM,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsC,YAAtC,EAAoDN,KAApD;AACAE,IAAAA,YAAY,CAACK,OAAb,CAAqB,WAArB,EAAkCP,KAAlC;AACD,GAHc,EAGZ,CAACA,KAAD,CAHY,CAAf;AAKA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD,CAXM;;GAAMF,Q","sourcesContent":["import { useState, useLayoutEffect } from \"react\";\n\n// export const useTheme = () => {\n//     const [theme, setTheme] = useState('light');\n\n//     useLayoutEffect(() => {\n//         document.documentElement.setAttribute('data-theme', theme)\n//     }, [theme])\n//     return { theme, setTheme };\n// };\n\n\n// const isDarkTheme = window?.matchMedia('(prefers-color-scheme: dark)').matches\n// const defaultTheme = isDarkTheme ? 'dark' : 'light'\n\nexport const useTheme = () => {\n  const [theme, setTheme] = useState(\n    localStorage.getItem('app-theme')\n  )\n\n  useLayoutEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme)\n    localStorage.setItem('app-theme', theme)\n  }, [theme])\n\n  return { theme, setTheme }\n}"]},"metadata":{},"sourceType":"module"}